angular.module("bzNestedModel",[]).factory("bzNestedResource",["$resource","$q","$rootScope",function(a,b,c){function d(d,e,f){function g(a,b){b=b||null;for(var c=0,d=a.length;d>c;c++)a[c].children||(a[c].children=[]),a[c]instanceof i||(a[c]=new i(a[c])),a[c].children.length&&g(a[c].children,a[c])}var h={update:{method:"POST"},create:{method:"PUT",params:{insert:!0}},move:{method:"PUT",params:{move:!0}}};f=angular.extend(h,f);var i=a(d,e,f);i.prototype.$insertItem=function(a){a=a||angular.noop;var b=this,d=angular.copy(this);return d.$create({id:b.id},function(d){d.children=[],b.$expanded=!0,b.children.unshift(d),c.$$phase||c.$apply(),a(d)})},i.prototype.$moveItem=function(a,b,c){c=c||angular.noop;var d=new i(this);return d.$move({id:this.id,insert:0==b,before:a.id},function(a){c(a)})},i.getTree=function(a,c){c=c||angular.noop,"function"==typeof a&&(c=a,a={});var d=b.defer();return i.get(a,function(a){g(a.children),d.resolve(a),c(a)}),d.promise};var j=function(a,b,c){if(c=c||[],angular.isUndefined(a))return null;if(b.call(this,a))return a;for(var d=null,e=0,f=a.children.length;f>e;e++)if(d=j(a.children[e],b,c)){c.push(a.children[e]);break}return d};return i.find=function(a,b,c){return j(a,b,c)},i}return d}]);
//# sourceMappingURL=bz-nested-model.map